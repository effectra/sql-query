<?php

declare(strict_types=1);

namespace Effectra\SqlQuery\Operations;

use Effectra\SqlQuery\Attribute;
use Effectra\SqlQuery\Build\BuildAction;
use Effectra\SqlQuery\Build\RunBuilder;

/**
 * Class Info
 *
 * The Info class provides a convenient interface for generating SQL queries to retrieve database information.
 */
class Info extends Attribute
{
    /**
     * Set the database name for the INFO query.
     *
     * @param string $db_name The name of the database.
     * @return self
     */
    public function databaseName(): self
    {
        $this->setAttribute('info', 'db_name');
        return $this;
    }

    /**
     * Specify that the INFO query should list databases.
     *
     * @return self
     */
    public function listDatabases(): self
    {
        $this->setAttribute('info', 'list_db');
        return $this;
    }

    /**
     * Specify that the INFO query should list tables in the database.
     *
     * @return self
     */
    public function listTables(): self
    {
        $this->setAttribute('info', 'list_tables');
        return $this;
    }

    /**
     * Specify that the INFO query should list columns of a table.
     *
     * @param string $table_name The name of the table.
     * @return self
     */
    public function listColumns(string $table_name): self
    {
        $this->setAttribute('table_name', $table_name);
        $this->setAttribute('info', 'list_cols');
        return $this;
    }

    public function tableExists(string $table_name): self
    {
        $this->setAttribute('table_name', $table_name);
        $this->setAttribute('info', 'table_exists');
        return $this;
    }

    /**
     * Specify that the INFO query should retrieve the schema of a table.
     *
     * @param string $table_name The name of the table.
     * @return self
     */
    public function tableSchema(string $table_name): self
    {
        $this->setAttribute('table_name', $table_name);
        $this->setAttribute('info', 'table_schema');
        return $this;
    }

    /**
     * Specify that the INFO query should retrieve table indexes.
     *
     * @param string $table_name The name of the table.
     * @return self
     */
    public function tableIndexes(string $table_name): self
    {
        $this->setAttribute('table_name', $table_name);
        $this->setAttribute('info', 'table_indexes');
        return $this;
    }

    /**
     * Get the SQL query generated by the Info operation.
     *
     * @return string
     */
    public function getQuery(): string
    {
        return (string) new RunBuilder($this->getAttributes(), BuildAction::INFO);
    }

    /**
     * Convert the Info operation to a string, returning the generated SQL query.
     *
     * @return string
     */
    public function __toString(): string
    {
        return $this->getQuery();
    }
}
